{"ast":null,"code":"var _jsxFileName = \"/Users/marinastone/Documents/RJS/ReactJS/project/react_project/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport env from '../components/env.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create() {\n  _s();\n\n  const [url, setUrl] = useState(' ');\n\n  let sendData = obj => {\n    fetch(env.urlBackend, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(obj)\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n\n      if (response.result) {\n        setUrl(env.url + '/' + response.url);\n      }\n    });\n  };\n\n  let loadDataFromForm = event => {\n    event.preventDefault();\n    let notes = event.target.elements.notes.value;\n    notes = notes.trim();\n\n    if (notes === ' ') {\n      alert('Заполните поле');\n      return false;\n    }\n\n    sendData({\n      \"notes\": notes\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loadDataFromForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"note\",\n        id: \"note\",\n        defaultValue: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"jb3Vw6TW6fi3F80Lam1/bsc1mM8=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/marinastone/Documents/RJS/ReactJS/project/react_project/src/components/Create.js"],"names":["React","useState","env","Create","url","setUrl","sendData","obj","fetch","urlBackend","method","headers","body","JSON","stringify","then","response","json","console","log","result","loadDataFromForm","event","preventDefault","notes","target","elements","value","trim","alert"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAiB,wBAAjB;;;AAGA,SAASC,MAAT,GAAiB;AAAA;;AAEf,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAcJ,QAAQ,CAAC,GAAD,CAA5B;;AAEA,MAAIK,QAAQ,GAAIC,GAAD,IAAS;AACrBC,IAAAA,KAAK,CAAEN,GAAG,CAACO,UAAN,EAAkB;AAClBC,MAAAA,MAAM,EAAG,MADS;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AALY,KAAlB,CAAL,CAOIQ,IAPJ,CAOSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPrB,EAQIF,IARJ,CAQSC,QAAQ,IAAG;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAGA,QAAQ,CAACI,MAAZ,EAAmB;AACff,QAAAA,MAAM,CAACH,GAAG,CAACE,GAAJ,GAAS,GAAT,GAAcY,QAAQ,CAACZ,GAAxB,CAAN;AACT;AACF,KAbA;AAcF,GAfD;;AAiBI,MAAIiB,gBAAgB,GAAIC,KAAD,IAAU;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBF,KAAtB,CAA4BG,KAAxC;AACKH,IAAAA,KAAK,GAAGA,KAAK,CAACI,IAAN,EAAR;;AACJ,QAAIJ,KAAK,KAAK,GAAd,EAAmB;AACfK,MAAAA,KAAK,CAAE,gBAAF,CAAL;AACA,aAAO,KAAP;AACH;;AACXvB,IAAAA,QAAQ,CAAE;AAAC,eAAUkB;AAAX,KAAF,CAAR;AACG,GATG;;AAYJ,sBAEE;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEH,gBAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,MAAzB;AAAgC,QAAA,YAAY,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD;;GA3CQlB,M;;KAAAA,M;AA4CT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport env from  '../components/env.json';\n\n\nfunction Create(){\n\n  const [url, setUrl]=useState(' ');\n\n  let sendData = (obj) => {\n     fetch (env.urlBackend, {\n          method : 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(obj)\n    })\n        .then(response => response.json())\n        .then(response =>{\n            console.log(response);\n            if(response.result){\n                setUrl(env.url +'/'+ response.url)\n      }\n    })\n  }\n\n      let loadDataFromForm = (event) =>{\n         event.preventDefault();\n         let notes = event.target.elements.notes.value;\n              notes = notes.trim();\n          if (notes === ' ') {\n              alert ('Заполните поле');\n              return false\n          }\nsendData ({\"notes\" : notes })\n  }\n\n\n  return (\n\n    <div>\n        <form onSubmit={loadDataFromForm}> \n            <label htmlFor=\"\"> Введите заметку</label>\n            <textarea name=\"note\" id=\"note\" defaultValue='Test'></textarea>\n            <button type='submit'> Создать </button>\n        </form>\n    </div>\n  )\n}\nexport default Create;"]},"metadata":{},"sourceType":"module"}