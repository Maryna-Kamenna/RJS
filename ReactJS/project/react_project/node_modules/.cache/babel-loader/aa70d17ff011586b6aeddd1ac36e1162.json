{"ast":null,"code":"var _jsxFileName = \"/Users/marinastone/Git/RJS/ReactJS/project/react_project/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport env from '../env.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create() {\n  _s();\n\n  const [url, setUrl] = useState('');\n  const [lineClass, setLineClass] = useState('hide'); // скрываем\n\n  const [formClass, setFormClass] = useState(''); // скрываем\n\n  let sendData = obj => {\n    setFormClass('hide');\n    setLineClass('');\n    fetch(env.urlBackend, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(obj)\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n\n      if (response.result) {\n        setUrl(env.url + '/' + response.url);\n      }\n    });\n  };\n\n  let loadDataFromForm = event => {\n    event.preventDefault();\n    let note = event.target.elements.note.value;\n    note = note.trim();\n\n    if (note === '') {\n      alert('Заполните поля');\n      return false;\n    }\n\n    sendData({\n      \"note\": note\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loadDataFromForm,\n      className: formClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"note\",\n        id: \"note\",\n        defaultValue: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: lineClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function () {\n            window.location.reload();\n          },\n          children: \"C\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Create, \"9l/q66HZgtMO5oFcTNaBQhIPXiY=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/marinastone/Git/RJS/ReactJS/project/react_project/src/components/Create.js"],"names":["React","useState","env","Create","url","setUrl","lineClass","setLineClass","formClass","setFormClass","sendData","obj","fetch","urlBackend","method","headers","body","JSON","stringify","then","response","json","console","log","result","loadDataFromForm","event","preventDefault","note","target","elements","value","trim","alert","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,MAAD,CAA1C,CAHc,CAGsC;;AACpD,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CAJc,CAIkC;;AAEhD,MAAIS,QAAQ,GAAIC,GAAD,IAAS;AACpBF,IAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAK,IAAAA,KAAK,CAACV,GAAG,CAACW,UAAL,EAAiB;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AALY,KAAjB,CAAL,CAOKQ,IAPL,CAOWC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPvB,EAQKF,IARL,CAQUC,QAAQ,IAAI;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAIA,QAAQ,CAACI,MAAb,EAAqB;AACjBnB,QAAAA,MAAM,CAACH,GAAG,CAACE,GAAJ,GAAQ,GAAR,GAAYgB,QAAQ,CAAChB,GAAtB,CAAN;AACH;AACJ,KAbL;AAcH,GAjBD;;AAmBA,MAAIqB,gBAAgB,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBF,IAAtB,CAA2BG,KAAtC;AACAH,IAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,EAAP;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACbK,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA,aAAO,KAAP;AACH;;AACDvB,IAAAA,QAAQ,CAAC;AAAC,cAASkB;AAAV,KAAD,CAAR;AACH,GATD;;AAWA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEH,gBAAhB;AAAkC,MAAA,SAAS,EAAEjB,SAA7C;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,MAAzB;AAAgC,QAAA,YAAY,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAEF,SAAhB;AAAA,8BACI;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAK;AAAQ,UAAA,OAAO,EAAE,YAAU;AAAC8B,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAAyB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GApDQjC,M;;KAAAA,M;AAsDT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport env from '../env.json';\r\n\r\nfunction Create() {\r\n\r\n    const [url, setUrl] = useState('');\r\n    const [lineClass, setLineClass] = useState('hide'); // скрываем\r\n    const [formClass, setFormClass] = useState(''); // скрываем\r\n\r\n    let sendData = (obj) => {\r\n        setFormClass('hide');\r\n        setLineClass('');\r\n        fetch(env.urlBackend, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: JSON.stringify(obj)\r\n        })\r\n            .then( response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.result) {\r\n                    setUrl(env.url+'/'+response.url);\r\n                }\r\n            })\r\n    }\r\n\r\n    let loadDataFromForm = (event) => {\r\n        event.preventDefault();\r\n        let note = event.target.elements.note.value;\r\n        note = note.trim();\r\n        if (note === '') {\r\n            alert('Заполните поля');\r\n            return false;\r\n        }\r\n        sendData({\"note\" : note});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={loadDataFromForm} className={formClass}>\r\n                <label htmlFor=\"\">Введите заметку</label>\r\n                <textarea name=\"note\" id=\"note\" defaultValue=\"Test\"></textarea>\r\n               \r\n                <button type=\"submit\" class=\"btn btn-primary\">\r\n  Создать </button> \r\n            </form>\r\n            <div className={lineClass}>\r\n                <div>{url}</div>\r\n                <div><button onClick={function(){window.location.reload()}}>Cоздать новую заметку</button></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}